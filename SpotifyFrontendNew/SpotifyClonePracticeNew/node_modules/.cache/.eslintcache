[{"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\index.js":"1","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\App.js":"2","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\reportWebVitals.js":"3","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\Homepage.js":"4","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\HomeMainBody.js":"5","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\NavbarHome.js":"6","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\HomeFooter.js":"7","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UserAccess\\Login.js":"8","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UI\\Input.js":"9","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UI\\Button.js":"10","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UI\\SpotifyTitle.js":"11","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UserAccess\\Registration.js":"12","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Dashboard\\Dashboard.js":"13","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Dashboard\\SidebarDash.js":"14"},{"size":609,"mtime":1629293152213,"results":"15","hashOfConfig":"16"},{"size":737,"mtime":1629871527460,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1628838933280,"results":"18","hashOfConfig":"16"},{"size":338,"mtime":1629871043345,"results":"19","hashOfConfig":"16"},{"size":690,"mtime":1629871043338,"results":"20","hashOfConfig":"16"},{"size":881,"mtime":1629871043351,"results":"21","hashOfConfig":"16"},{"size":7081,"mtime":1629871043332,"results":"22","hashOfConfig":"16"},{"size":5427,"mtime":1629714610015,"results":"23","hashOfConfig":"16"},{"size":550,"mtime":1629193596929,"results":"24","hashOfConfig":"16"},{"size":379,"mtime":1628838933028,"results":"25","hashOfConfig":"16"},{"size":473,"mtime":1628838933050,"results":"26","hashOfConfig":"16"},{"size":11154,"mtime":1629202681424,"results":"27","hashOfConfig":"16"},{"size":218,"mtime":1629871423612,"results":"28","hashOfConfig":"16"},{"size":1920,"mtime":1629871423618,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1yqoyxl",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\index.js",[],["60","61"],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\App.js",["62"],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\reportWebVitals.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\Homepage.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\HomeMainBody.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\NavbarHome.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Homepage\\HomeFooter.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UserAccess\\Login.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UI\\Input.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UI\\Button.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UI\\SpotifyTitle.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\UserAccess\\Registration.js",["63"],"import { useState, useReducer, useEffect } from \"react\";\r\nimport stylesForReg from \"./Registration.module.css\";\r\nimport Input from \"../UI/Input\";\r\nimport Button from \"../UI/Button\";\r\nimport SpotifyTitle from \"../UI/SpotifyTitle\";\r\n\r\nconst emailReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return {\r\n      value: action.val,\r\n      isValid: action.val.includes(\"@\") && action.val.includes(\".com\"),\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return {\r\n      value: state.value,\r\n      isValid: state.value.includes(\"@\") && state.value.includes(\".com\"),\r\n    };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\n// const confirmEmailReducer = (state, action) => {\r\n//   if (action.type === \"USER_INPUT\") {\r\n//     return {\r\n//       value: action.val,\r\n//       isValid: action.val.includes(\"@\") && action.val.includes(\".com\"),\r\n//     };\r\n//   }\r\n//   if (action.type === \"INPUT_BLUR\") {\r\n//     return {\r\n//       value: state.value,\r\n//       isValid: state.value.includes(\"@\") && state.value.includes(\".com\"),\r\n//     };\r\n//   }\r\n//   return { value: \"\", isValid: false };\r\n// };\r\n\r\nconst phoneReducer = (state, action) => {\r\n  const pattern = /^[0-9]{10}$/;\r\n  if (action.type === \"USER_INPUT\") {\r\n    return {\r\n      value: action.val,\r\n      isValid: pattern.test(action.val),\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return {\r\n      value: state.value,\r\n      isValid: pattern.test(state.value),\r\n    };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst passwordReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return {\r\n      value: action.val,\r\n      isValid: action.val.trim().length >= 8,\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return {\r\n      value: state.value,\r\n      isValid: state.value.trim().length >= 8,\r\n    };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst usernameReducer = (state, action) => {\r\n  const pattern = /^[A-Za-z ]*$/;\r\n  if (action.type === \"USER_INPUT\") {\r\n    return {\r\n      value: action.val,\r\n      isValid: pattern.test(action.val) && action.val.trim().length > 0,\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return {\r\n      value: state.value,\r\n      isValid: pattern.test(state.value) && state.value.trim().length > 0,\r\n    };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst dobReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return {\r\n      value: action.val,\r\n      isValid: action.val.trim().length > 0,\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return {\r\n      value: state.value,\r\n      isValid: state.value.trim().length > 0,\r\n    };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst Registration = () => {\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  const [registrationState, setRegistrationState] = useState(null);\r\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const confirmEmailReducer = (state, action) => {\r\n    if (action.type === \"USER_INPUT\") {\r\n      return {\r\n        value: action.val,\r\n        isValid:\r\n          action.val === emailState.value && action.val.trim().length > 0,\r\n      };\r\n    }\r\n    if (action.type === \"INPUT_BLUR\") {\r\n      return {\r\n        value: state.value,\r\n        isValid:\r\n          state.value === emailState.value && state.value.trim().length > 0,\r\n      };\r\n    }\r\n    return { value: \"\", isValid: false };\r\n  };\r\n\r\n  const [confirmemailState, dispatchConfirmEmailState] = useReducer(\r\n    confirmEmailReducer,\r\n    { value: \"\", isValid: null }\r\n  );\r\n  const [phoneState, dispatchPhoneState] = useReducer(phoneReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n  const [usernameState, dispatchusernameState] = useReducer(usernameReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n  const [dobState, dispatchDobState] = useReducer(dobReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const { isValid: emailIsvalid } = emailState;\r\n  const { isValid: confirmEmailIsvalid } = confirmemailState;\r\n  const { isValid: phoneIsvalid } = phoneState;\r\n  const { isValid: passwordIsvalid } = passwordState;\r\n  const { isValid: usernameIsvalid } = usernameState;\r\n  const { isValid: dobIsvalid } = dobState;\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      console.log(\"Checking form Validity\");\r\n      setFormIsValid(\r\n        emailIsvalid &&\r\n          confirmEmailIsvalid &&\r\n          phoneIsvalid &&\r\n          passwordIsvalid &&\r\n          usernameIsvalid &&\r\n          dobIsvalid\r\n      );\r\n    }, 500);\r\n    return () => {\r\n      console.log(\"Clean up !!\");\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [\r\n    emailIsvalid,\r\n    confirmEmailIsvalid,\r\n    phoneIsvalid,\r\n    passwordIsvalid,\r\n    usernameIsvalid,\r\n    dobIsvalid,\r\n  ]);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n\r\n  const confirmEmailChangeHandler = (event) => {\r\n    dispatchConfirmEmailState({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n\r\n  const phoneChangeHandler = (event) => {\r\n    dispatchPhoneState({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n\r\n  const usernameChangeHandler = (event) => {\r\n    dispatchusernameState({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n\r\n  const dobChangeHandler = (event) => {\r\n    dispatchDobState({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n\r\n  const emailBlurHandler = () => {\r\n    dispatchEmail({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const confirmEmailBlurHandler = () => {\r\n    dispatchConfirmEmailState({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const phoneBlurHandler = () => {\r\n    dispatchPhoneState({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const passwordBlurHandler = () => {\r\n    dispatchPassword({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const usernameBlurHandler = () => {\r\n    dispatchusernameState({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const dobBlurHandler = () => {\r\n    dispatchDobState({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (formIsValid) {\r\n      console.log(\r\n        `${emailState.value}\\n${confirmemailState.value}\\n${phoneState.value}\\n${passwordState.value}\\n${usernameState.value}\\n${dobState.value}`\r\n      );\r\n      const response = await fetch(\"http://localhost:17846/api/User/\", {\r\n        // mode: \"no-cors\",\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          Username: usernameState.value,\r\n          Useremail: emailState.value,\r\n          Phonenumber: phoneState.value,\r\n          Password: passwordState.value,\r\n          Dob: dobState.value,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Acces-Control-Allow-Origin\": \"*\",\r\n        },\r\n      }).catch((error) => {\r\n        console.error(\"Error: \", error);\r\n      });\r\n      if (response.ok) {\r\n        console.log(\"Registration successful\");\r\n        setRegistrationState(true);\r\n      } else {\r\n        console.log(\"Something went wrong\");\r\n        setRegistrationState(false);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={stylesForReg.mainContainer}>\r\n      <SpotifyTitle />\r\n      <br />\r\n      <h1>\r\n        <b>Sign up for free to start listening.</b>\r\n      </h1>\r\n      <form onSubmit={submitHandler}>\r\n        <Input\r\n          label=\"What's your email?\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Enter your email.\"\r\n          isValid={emailIsvalid}\r\n          value={emailState.value}\r\n          onChange={emailChangeHandler}\r\n          onBlur={emailBlurHandler}\r\n        />\r\n        {emailIsvalid === false && (\r\n          <p className={stylesForReg.errorMessage}>\r\n            Please enter a valid email.\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Confirm your email\"\r\n          id=\"confirmEmail\"\r\n          type=\"email\"\r\n          value={confirmemailState.value}\r\n          isValid={confirmEmailIsvalid}\r\n          placeholder=\"Enter your email again.\"\r\n          onChange={confirmEmailChangeHandler}\r\n          onBlur={confirmEmailBlurHandler}\r\n        />\r\n        {confirmEmailIsvalid === false && (\r\n          <p className={stylesForReg.errorMessage}>The emails do not match.</p>\r\n        )}\r\n        <Input\r\n          label=\"What's your phone number?\"\r\n          id=\"phnumber\"\r\n          type=\"text\"\r\n          isValid={phoneIsvalid}\r\n          value={phoneState.value}\r\n          placeholder=\"Enter your phone number.\"\r\n          onChange={phoneChangeHandler}\r\n          onBlur={phoneBlurHandler}\r\n        />\r\n        {phoneIsvalid === false && (\r\n          <p className={stylesForReg.errorMessage}>\r\n            Please enter a valid phone number.\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"Create a password\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          isValid={passwordIsvalid}\r\n          value={passwordState.value}\r\n          placeholder=\"Create a password.\"\r\n          onChange={passwordChangeHandler}\r\n          onBlur={passwordBlurHandler}\r\n        />\r\n        {passwordIsvalid === false && (\r\n          <p className={stylesForReg.errorMessage}>\r\n            Please enter a password containing more than 8 characters.\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"What should we call you?\"\r\n          id=\"username\"\r\n          type=\"text\"\r\n          isValid={usernameIsvalid}\r\n          value={usernameState.value}\r\n          placeholder=\"Enter a profile name.\"\r\n          onChange={usernameChangeHandler}\r\n          onBlur={usernameBlurHandler}\r\n        />\r\n        {usernameIsvalid === false && (\r\n          <p className={stylesForReg.errorMessage}>\r\n            Please enter a valid name.\r\n          </p>\r\n        )}\r\n        <Input\r\n          label=\"What's your date of birth?\"\r\n          id=\"dob\"\r\n          type=\"date\"\r\n          placeholder=\"Enter your date of birth.\"\r\n          isValid={dobIsvalid}\r\n          value={dobState.value}\r\n          onChange={dobChangeHandler}\r\n          onBlur={dobBlurHandler}\r\n        />\r\n        {dobIsvalid === false && (\r\n          <p className={stylesForReg.errorMessage}>\r\n            Please select a valid date of birth.\r\n          </p>\r\n        )}\r\n        <Button id=\"signupButton\" type=\"submit\">\r\n          Sign up\r\n        </Button>\r\n        {registrationState === true && formIsValid && (\r\n          <p className={stylesForReg.successMessage}>\r\n            Registration successfull.\r\n          </p>\r\n        )}\r\n        {registrationState === false && formIsValid && (\r\n          <p className={stylesForReg.errorMessage}>\r\n            Something went wrong. Please try again.\r\n          </p>\r\n        )}\r\n      </form>\r\n      <p className={stylesForReg.loginLink}>\r\n        Have an account? <a href=\"\">Log in</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Dashboard\\Dashboard.js",[],"C:\\Users\\Manali.jain\\Desktop\\Spotify\\SpotifyFrontendNew\\SpotifyClonePracticeNew\\src\\Components\\Dashboard\\SidebarDash.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":375,"column":26,"nodeType":"74","endLine":375,"endColumn":37},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]